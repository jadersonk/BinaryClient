<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:BinaryClient"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:model="clr-namespace:BinaryClient.Model"
    xmlns:viewModel="clr-namespace:BinaryClient.ViewModel"
    x:Class="BinaryClient.Views.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="382.8" Width="652.2">
    <Window.DataContext>
        <viewModel:MainWindowViewModel/>
    </Window.DataContext>
    <Grid Background="#FF333333" Margin="0,0,-53,0">
        <Button x:Name="ButtonCall" Content="CALL" HorizontalAlignment="Left" Margin="330,161,0,0" VerticalAlignment="Top" Width="67" Height="33" Click="buttonCall_Click" Background="#1DA716" Foreground="#DEF5DB" FontWeight="Bold"/>
        <Button x:Name="ButtonPut" Content="PUT" HorizontalAlignment="Left" Margin="330,216,0,0" VerticalAlignment="Top" Width="67" Click="buttonPut_Click" Background="#D71A21" Foreground="#DEF5DB" FontWeight="Bold" Height="33"/>
        <Button x:Name="ButtonAdd" Content="+ Add" HorizontalAlignment="Left" Margin="165,12,0,0" VerticalAlignment="Top" Width="75" Foreground="#ECECEC" Background="#252525" Click="ButtonAdd_Click"/>
        <Button x:Name="ButtonRemove" Content="- Remove" HorizontalAlignment="Left" Margin="262,12,0,0" VerticalAlignment="Top" Width="75" 
			Click="buttonRemove_Click" Foreground="#ECECEC" Background="#252525"/>
        <Button x:Name="ButtonUpdate" Content="🔃 Update" HorizontalAlignment="Left" Margin="367,12,0,0" VerticalAlignment="Top" Width="75" 
			Click="buttonUpdate_Click" Foreground="#ECECEC" Background="#252525"/>
        <ComboBox x:Name="ComboMarket" ItemsSource="{Binding Path=MarketList}" DisplayMemberPath="name" SelectedValuePath="key" SelectedItem="{Binding Path=SelectedMarket, Mode=TwoWay}"
                  HorizontalAlignment="Left" Margin="44,192,0,0" VerticalAlignment="Top" Width="120"/>
        <ComboBox x:Name="ComboSymbol" ItemsSource="{Binding Path=SymbolList}" DisplayMemberPath="name" SelectedValuePath="symbol" SelectedItem="{Binding Path=SelectedSymbol,Mode=TwoWay}"
                  HorizontalAlignment="Left" Margin="195,192,0,0" VerticalAlignment="Top" Width="120"/>
        <ComboBox x:Name="ComboStart" ItemsSource="{Binding Path=StartTimeList}" DisplayMemberPath="Value" SelectedValuePath="Key" SelectedItem="{Binding Path=SelectedStartTime, Mode=TwoWay}"
                  HorizontalAlignment="Left" Margin="107,228,0,0" VerticalAlignment="Top" Width="120" IsEnabled="False"/>
        <Label x:Name="Label" Content="Start Time" HorizontalAlignment="Left" Margin="38,225,0,0" VerticalAlignment="Top" Foreground="#ECECEC"/>
        <ComboBox x:Name="ComboDuration" HorizontalAlignment="Left" Margin="38,269,0,0" VerticalAlignment="Top" Width="120" IsEnabled="False">
            <ComboBoxItem Name="Duration" IsSelected="True">Duration</ComboBoxItem>
            <ComboBoxItem Name="EndTime">End Time</ComboBoxItem>
        </ComboBox>
        <TextBox x:Name="TextDuration" Text="{Binding Path=Duration, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Height="23" 
                 Margin="180,269,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="47"/>
        <ComboBox x:Name="ComboTimeUnit" ItemsSource="{Binding Path=TimeUnitList}" DisplayMemberPath="Value" SelectedValuePath="Key" 
                  SelectedItem="{Binding Path=SelectedTimeUnit, Mode=TwoWay}" HorizontalAlignment="Left" Margin="247,269,0,0" VerticalAlignment="Top" Width="120"/>
        <ComboBox x:Name="ComboBasis" ItemsSource="{Binding Path=BasisList}" DisplayMemberPath="Value" SelectedValuePath="Key" 
                  SelectedItem="{Binding Path=SelectedBasis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Margin="38,308,0,0" VerticalAlignment="Top" Width="120"/>
        <ComboBox x:Name="ComboCurrency" ItemsSource="{Binding Path=CurrencyList}" DisplayMemberPath="Value" SelectedValuePath="Key" SelectedItem="{Binding Path=SelectedCurrency, Mode=TwoWay}"
                  HorizontalAlignment="Left" Margin="180,308,0,0" VerticalAlignment="Top" Width="120"/>
        <TextBox x:Name="TextPayout" Text="{Binding Path=BasisValue, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Height="23" Margin="322,308,0,0" 
                 TextWrapping="Wrap" VerticalAlignment="Top" Width="45"/>
        <Label x:Name="LabelTime" Content="Time, ms" HorizontalAlignment="Left" Margin="405,282,0,0" VerticalAlignment="Top" Foreground="#ECECEC"/>
        <TextBox x:Name="TextTime" HorizontalAlignment="Left" Height="23" Margin="405,308,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="67" IsReadOnly="True"/>
        <Button x:Name="ButtonPing" Content="PING" HorizontalAlignment="Left" Margin="568,276,0,0" VerticalAlignment="Top" Width="73" Click="buttonPing_Click" Background="#D71A21" Foreground="#DEF5DB" FontWeight="Bold" Height="22"/>
        <DataGrid x:Name="DataAccounts" HorizontalAlignment="Center" Margin="24,36,20.8,0" VerticalAlignment="Top" Height="104" Width="572" 
                  CanUserAddRows="False" SourceUpdated="DataGrid_SourceUpdated" TargetUpdated="DataGrid_SourceUpdated" AutoGenerateColumns="False">
            <DataGrid.DataContext>
                <model:Accounts/>
            </DataGrid.DataContext>
            <DataGrid.Columns>
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.Header>
                        <CheckBox Checked="CheckBox_Checked" Unchecked="CheckBox_Unchecked"/>
                    </DataGridTemplateColumn.Header>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding Selected, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="Username" Binding="{Binding Username}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Name" Binding="{Binding Name}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Key" Binding="{Binding Key, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Width="0.5*"/>
                <DataGridTextColumn Header="Status" Binding="{Binding Status}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Opens" Binding="{Binding Opens}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Balance" Binding="{Binding Balance}" IsReadOnly="True"/>
            </DataGrid.Columns>
        </DataGrid>
        <Label x:Name="LabelSelected" Content="Selected: " HorizontalAlignment="Left" Margin="38,145,0,0" VerticalAlignment="Top" 
			Foreground="#ECECEC" Background="#252525"/>
        <Label x:Name="LabelCall" Content="{Binding Path=CallLabel, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Margin="405,164,0,0" VerticalAlignment="Top" Foreground="#ECECEC"/>
        <Label x:Name="LabelPut" Content="{Binding Path=CallLabel, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Margin="405,219,0,0" VerticalAlignment="Top" Foreground="#ECECEC"/>
        <Button x:Name="ButtonSubscribe" Content="Subscribe" HorizontalAlignment="Left" Margin="490,276,0,0" VerticalAlignment="Top" Width="73" Click="buttonSubscribe_Click" Background="#D71A21" Foreground="#DEF5DB" FontWeight="Bold" Height="22"/>
        <Button x:Name="ButtonUnsubscribe" Content="Unsubscribe" HorizontalAlignment="Left" Margin="490,309,0,0" VerticalAlignment="Top" Width="73" Click="buttonUnsubscribe_Click" Background="#D71A21" Foreground="#DEF5DB" FontWeight="Bold" Height="22"/>
    </Grid>
</Window>
